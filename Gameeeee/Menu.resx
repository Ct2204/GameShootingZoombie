<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MRH+H3amIOkybNXBAAAAAElFTkSuQmCC
</value>
  </data>
</root>